name: CI/CD Pipeline for Train Mail Service

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때마다 트리거됩니다.

jobs:
  # 1. Docker 이미지 빌드 및 ACR에 푸시
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Log in to Azure Container Registry (ACR)
        uses: azure/docker-login@v1
        with:
          login-server: team04registry.azurecr.io
          username: ${{ secrets.AZURE_USERNAME }}
          password: ${{ secrets.AZURE_PASSWORD }}

      - name: Build and push Docker image to ACR
        run: |
          docker build -t team04registry.azurecr.io/user-service:${{ github.sha }} .
          docker push team04registry.azurecr.io/user-service:${{ github.sha }}
          docker tag team04registry.azurecr.io/user-service:${{ github.sha }} team04registry.azurecr.io/user-service:latest
          docker push team04registry.azurecr.io/user-service:latest

  # 2. Azure AKS에 배포
  deploy_to_aks:
    runs-on: ubuntu-latest
    needs: build_and_push  # 이전 작업이 완료된 후 실행됩니다.

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Azure CLI and kubectl
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          sudo apt-get install -y kubectl  # kubectl 설치

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group team4 --name team04-aks

      - name: Apply Kubernetes deployment
        run: kubectl apply -f ./kubernetes/deployment.yaml

      - name: Apply Kubernetes service
        run: kubectl apply -f ./kubernetes/service.yaml

      - name: Apply Kubernetes ingress
        run: kubectl apply -f ./kubernetes/ingress.yaml

      - name: Restart deployment
        run: kubectl rollout restart deployment/user-service -n user-namespace

      - name: Verify deployment
        run: kubectl rollout status deployment/user-service -n user-namespace
